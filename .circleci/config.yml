version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  docker: circleci/docker@2.1.3
  python: circleci/python@2.0.3
  heroku: circleci/heroku@1.2.6


jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - run:
          command: |
            python3 -m venv env 
            source env/bin/activate 
            python3 -m pip install --upgrade pip
            pip install -r requirements.txt
      - run: 
          command: 
            source env/bin/activate
            pytest
            npm install resumed jsonresume-theme-kendall
            npx resumed render resume.json --theme jsonresume-theme-kendall
            mkdir public
            mv resume.html public/index.html

  build-deploy-docker:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and push Docker image to Heroku
          command: |
            echo $DOCKER_ACCESS_TOKEN | get-login-password
            docker build -t $CIRCLE_SHA2 .
            docker tag $CIRCLE_SHA2 $DOCKER_USERNAME/Resume:$CIRCLE_SHA2
            docker push $DOCKER_USERNAME/Resume:$CIRCLE_SHA2
              
  deploy-heroku:
      executor: heroku/default
      steps:
        - checkout
        - setup_remote_docker:
            version: 20.10.14
            docker_layer_caching: true 
        - heroku/install
        - run:
            name: Pushing to heroku registry
            command: |
              HEROKU_API_KEY=$HEROKU_TOKEN heroku container:login
              HEROKU_API_KEY=$HEROKU_TOKEN heroku apps:create $HEROKU_APP_NAME --region eu 
              HEROKU_API_KEY=$HEROKU_TOKEN heroku container:push web -a $HEROKU_APP_NAME 
              HEROKU_API_KEY=$HEROKU_TOKEN heroku container:release web -a $HEROKU_APP_NAME 

workflows:
  build_test_and_deploy:
    jobs:
      - build-and-test
      - build-deploy-docker:
          filters:
            branches:
              only: 
                - main
          requires:
            - build-and-test
      - deploy-heroku:
          requires:
            - build-deploy-docker